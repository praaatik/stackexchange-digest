{"version":3,"sources":["images/scrollToTopButtonIcon.svg","components/ScrollToTopButton.js","components/Card.js","components/CardHolder.js","sites.js","components/Question.js","images/view-dark.svg","images/question-dark.svg","images/view-light.svg","images/question-light.svg","components/MetaData.js","components/SpecificCard.js","images/moon.svg","images/sun.svg","components/Themer.js","components/Navbar.js","components/Tag.js","images/github-icon.svg","components/Footer.js","styled-components/global.js","styled-components/theme.js","App.js","reportWebVitals.js","index.js"],"names":["ScrollToTopButton","className","onClick","document","body","scrollTop","documentElement","src","ScrollToTopButtonIcon","alt","Card","props","class","join","siteName","href","link","target","rel","dangerouslySetInnerHTML","__html","title","to","CardHolder","sites","map","s","index","w","substr","indexOf","questions","Question","answerCount","MetaData","theme","ViewLight","ViewDark","viewCount","QuestionLight","QuestionDark","ownerProfileLink","ownerProfilePhoto","ownerName","SpecificCard","useState","data","setData","setLoading","match","params","id","URL","history","useHistory","useEffect","axios","get","then","response","items","d","concat","questionId","question_id","creationDate","creation_date","isAnswered","is_answered","view_count","answer_count","tags","owner","display_name","profile_image","tag","tagName","path","push","pathname","handleTagClick","Themer","clicked","currentTheme","Moon","Sun","Navbar","Tag","location","console","log","Footer","Github","GlobalStyles","createGlobalStyle","selectionBackgroundColor","selectionColor","backgroundColor","borderColor","titleColor","tagHolderBackground","tagColor","profileColor","themeButtonColor","navBackgroundColor","scrollTopBorder","darkTheme","lightTheme","App","localStorage","getItem","setQuestions","setTitle","setTheme","siteURLs","setItem","all","spread","allData","a","basename","process","exact","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bb7544aa.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/scrollToTopButtonIcon.6bbbe1d9.svg\";","import React from \"react\";\r\n\r\nimport \"../stylesheets/ScrollToTopButton.scss\";\r\nimport ScrollToTopButtonIcon from \"../images/scrollToTopButtonIcon.svg\";\r\n\r\nfunction ScrollToTopButton() {\r\n  function scrollUp() {\r\n    document.body.scrollTop = 0; //for safari\r\n    document.documentElement.scrollTop = 0; //for opera, firefox, chrome, IE\r\n  }\r\n  return (\r\n    <div className=\"scroll-top-button\" onClick={() => scrollUp()}>\r\n      <img src={ScrollToTopButtonIcon} alt=\"scroll to top icon\" className=\"scroll-top-icon\"/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ScrollToTopButton;\r\n","import React from \"react\";\r\nimport \"../stylesheets/Card.scss\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Card(props) {\r\n  // console.log(props);\r\n  return (\r\n    <div className={[props.class, \"card\"].join(\" \")}>\r\n      <p className=\"site-name\">{props.siteName}</p>\r\n\r\n      <br></br>\r\n      <a href={props.link} target=\"_blank\" rel=\"noreferrer\" className=\"title\">\r\n        <div dangerouslySetInnerHTML={{ __html: props.title }}></div>\r\n      </a>\r\n      <Link to={`/specific/${props.siteName}`}>\r\n        <div className=\"card--viewmore\">\r\n          View Questions\r\n          <span className=\"left__border\"></span>\r\n          <span className=\"right__border\"></span>\r\n          <span className=\"top__border\"></span>\r\n          <span className=\"bottom__border\"></span>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\n\r\nimport \"../stylesheets/CardHolder.scss\";\r\n\r\nimport ScrollToTopButton from \"./ScrollToTopButton\";\r\nimport Card from \"./Card\";\r\n\r\nfunction CardHolder(props) {\r\n  return (\r\n    <div className=\"cardholder\">\r\n      {props.sites.map((s, index) => {\r\n        //extracting the classnames for the website name\r\n        // ex - codereview.stackexchange.com would have a classname of \"codereview\"\r\n        // in case it's just one word, like askubuntu, \"w\" would be empty and the classname would be \"askubuntu\"\r\n\r\n        let w = s.substr(0, s.indexOf(\".\"));\r\n        return w === \"\" ? (\r\n          <Card\r\n            siteName={s}\r\n            class={s}\r\n            link={props.questions[index]}\r\n            title={props.title[index]}\r\n          ></Card>\r\n        ) : (\r\n          <Card\r\n            siteName={s}\r\n            class={w}\r\n            link={props.questions[index]}\r\n            title={props.title[index]}\r\n          ></Card>\r\n        );\r\n      })}\r\n\r\n      <ScrollToTopButton />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardHolder;\r\n","export let sites = [\r\n  \"stackoverflow\",\r\n  \"english.stackexchange\",\r\n  \"physics.stackexchange\",\r\n  \"movies.stackexchange\",\r\n  \"astronomy.stackexchange\",\r\n  \"raspberrypi.stackexchange\",\r\n  \"worldbuilding.stackexchange\",\r\n  \"askubuntu\",\r\n  \"superuser\",\r\n  \"unix.stackexchange\",\r\n  \"cstheory.stackexchange\",\r\n  \"codereview.stackexchange\",\r\n  \"security.stackexchange\",\r\n  \"softwareengineering.stackexchange\",\r\n  \"fitness.stackexchange\",\r\n  \"skeptics.stackexchange\",\r\n  \"scicomp.stackexchange\",\r\n  \"history.stackexchange\",\r\n  \"cs.stackexchange\",\r\n  \"hinduism.stackexchange\",\r\n  \"worldbuilding.stackexchange\",\r\n  \"networkengineering.stackexchange\",\r\n];\r\n\r\n// below used for testing\r\n// export let sites = [\r\n//   \"movies.stackexchange\",\r\n//   \"physics.stackexchange\",\r\n//   \"unix.stackexchange\",\r\n// ];\r\n","import React from \"react\";\r\nimport \"../stylesheets/Question.scss\";\r\n\r\nfunction Question(props) {\r\n  return (\r\n    <div className=\"question\">\r\n      <a href={props.link} target=\"_blank\" rel=\"noreferrer\" className={\"title\"}>\r\n        <div\r\n          dangerouslySetInnerHTML={{ __html: props.title }}\r\n          className={props.answerCount === 0 ? \"no-answer\" : \"answer\"}\r\n        ></div>\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Question;\r\n","export default __webpack_public_path__ + \"static/media/view-dark.dca5f315.svg\";","export default __webpack_public_path__ + \"static/media/question-dark.c0bf8b2f.svg\";","export default __webpack_public_path__ + \"static/media/view-light.e737dd0b.svg\";","export default __webpack_public_path__ + \"static/media/question-light.11adbd0a.svg\";","import React from \"react\";\r\n\r\nimport ViewDark from \"../images/view-dark.svg\";\r\nimport QuestionDark from \"../images/question-dark.svg\";\r\nimport ViewLight from \"../images/view-light.svg\";\r\nimport QuestionLight from \"../images/question-light.svg\";\r\n\r\nimport \"../stylesheets/MetaData.scss\";\r\n\r\nfunction MetaData(props) {\r\n  return (\r\n    <div className=\"meta-data\">\r\n      <div className=\"meta-data--left\">\r\n        <div className=\"view-count\">\r\n          <img\r\n            src={props.theme === \"dark\" ? ViewLight : ViewDark}\r\n            alt=\"view icon\"\r\n          ></img>\r\n          <span>{props.viewCount}</span>\r\n        </div>\r\n        <div className=\"answer-count\">\r\n          <img\r\n            src={props.theme === \"dark\" ? QuestionLight : QuestionDark}\r\n            alt=\"question icon\"\r\n          ></img>\r\n          <span>{props.answerCount}</span>\r\n        </div>\r\n      </div>\r\n      <a href={props.ownerProfileLink} target=\"_blank\" rel=\"noreferrer\">\r\n        <div className=\"meta-data--right\">\r\n          <img src={props.ownerProfilePhoto} alt={props.ownerName} />\r\n          <p dangerouslySetInnerHTML={{ __html: props.ownerName }}></p>\r\n        </div>\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MetaData;\r\n","//libraries\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\n//stylesheets\r\nimport \"../stylesheets/SpecificCard.scss\";\r\n\r\n//components\r\nimport ScrollToTopButton from \"./ScrollToTopButton\";\r\nimport Question from \"./Question\";\r\nimport MetaData from \"./MetaData\";\r\n\r\nfunction SpecificCard(props) {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const siteName = props.match.params.id;\r\n  const URL = `https://api.stackexchange.com/2.2/questions?order=desc&sort=activity&site=${siteName}&filter=!LaSRLvM3aoFvP_FHtdS2mM`;\r\n\r\n  const history = useHistory();\r\n\r\n  const fetchData = () => {\r\n    axios.get(URL).then((response) => {\r\n      response.data.items.map((d, index) => {\r\n        setData((data) =>\r\n          data.concat({\r\n            title: d.title,\r\n            link: d.link,\r\n            questionId: d.question_id,\r\n            creationDate: d.creation_date,\r\n            isAnswered: d.is_answered,\r\n            viewCount: d.view_count,\r\n            answerCount: d.answer_count,\r\n            tags: d.tags,\r\n            ownerName: d.owner.display_name,\r\n            ownerProfileLink: d.owner.link,\r\n            ownerProfilePhoto: d.owner.profile_image,\r\n          })\r\n        );\r\n      });\r\n    });\r\n  };\r\n\r\n  //The below function will push in history the siteName and the path.\r\n  //Sitename and tagname are collectively used to fetch the data from the API.\r\n  //Look in the definition of the Route in App.js, line number 88 (at the time of writing)\r\n  //Refer - https://stackoverflow.com/a/60809812/6438526\r\n  function handleTagClick(tagName) {\r\n    let path = `/specific/tag/${tagName}`;\r\n    history.push({ pathname: path, siteName: siteName });\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"question-card--parent\" id=\"parent\">\r\n      {data.map((d, index) => {\r\n        return (\r\n          <div className=\"question-card\">\r\n            <Question\r\n              link={d.link}\r\n              title={d.title}\r\n              answerCount={d.answerCount}\r\n            />\r\n\r\n            <div className=\"tag-holder\">\r\n              {d.tags.map((tag) => {\r\n                return (\r\n                  <div className=\"tags\" onClick={() => handleTagClick(tag)}>\r\n                    {tag}\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n\r\n            <MetaData\r\n              theme={d.theme}\r\n              viewCount={d.viewCount}\r\n              answerCount={d.answerCount}\r\n              ownerProfileLink={d.ownerProfileLink}\r\n              ownerProfilePhoto={d.ownerProfilePhoto}\r\n              ownerName={d.ownerName}\r\n            />\r\n            <span className=\"index\">{index + 1}</span>\r\n          </div>\r\n        );\r\n      })}\r\n\r\n      <ScrollToTopButton />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SpecificCard;\r\n","export default __webpack_public_path__ + \"static/media/moon.230bed42.svg\";","export default __webpack_public_path__ + \"static/media/sun.2d358aa0.svg\";","import React, { useState } from \"react\";\r\n\r\nimport Moon from \"../images/moon.svg\";\r\nimport Sun from \"../images/sun.svg\";\r\n\r\nimport \"../stylesheets/Themer.scss\";\r\nfunction Themer(props) {\r\n  return (\r\n    <div className=\"themer\" onClick={() => props.clicked()}>\r\n      <img\r\n        src={props.currentTheme === \"light\" ? Moon : Sun}\r\n        alt=\"theme button\"\r\n      ></img>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Themer;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"../stylesheets/Navbar.scss\";\r\n\r\nfunction Navbar() {\r\n  return (\r\n    <div className=\"navbar\">\r\n      <Link to=\"/\">\r\n        <div className=\"home\">Home</div>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport ScrollToTopButton from \"./ScrollToTopButton\";\r\nimport Question from \"./Question\";\r\nimport MetaData from \"./MetaData\";\r\n\r\nimport \"../stylesheets/SpecificCard.scss\";\r\n\r\nfunction Tag(props) {\r\n  const [data, setData] = useState([]);\r\n  const URL = `https://api.stackexchange.com/2.2/questions?order=desc&sort=activity&tagged=${props.match.params.id}&site=${props.location.siteName}`;\r\n\r\n  const history = useHistory();\r\n  const siteName = props.match.params.id;\r\n\r\n  const fetchData = () => {\r\n    axios.get(URL).then((response) => {\r\n      response.data.items.map((d, index) => {\r\n        setData((data) =>\r\n          data.concat({\r\n            title: d.title,\r\n            link: d.link,\r\n            questionId: d.question_id,\r\n            creationDate: d.creation_date,\r\n            isAnswered: d.is_answered,\r\n            viewCount: d.view_count,\r\n            answerCount: d.answer_count,\r\n            tags: d.tags,\r\n            ownerName: d.owner.display_name,\r\n            ownerProfileLink: d.owner.link,\r\n            ownerProfilePhoto: d.owner.profile_image,\r\n          })\r\n        );\r\n      });\r\n    });\r\n  };\r\n\r\n  function handleTagClick(tagName) {\r\n    let path = `/specific/tag/${tagName}`;\r\n    history.push({ pathname: path, siteName: siteName });\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  console.log(data);\r\n  return (\r\n    <div className=\"question-card--parent\" id=\"parent\">\r\n      {/* {console.log(`Loading is: ${loading}`)} */}\r\n      {data.map((d, index) => {\r\n        return (\r\n          <div className=\"question-card\">\r\n            {/* one */}\r\n            <Question\r\n              link={d.link}\r\n              title={d.title}\r\n              answerCount={d.answerCount}\r\n            />\r\n\r\n            <div className=\"tag-holder\">\r\n              {d.tags.map((tag) => {\r\n                return (\r\n                  <div className=\"tags\" onClick={() => handleTagClick(tag)}>\r\n                    {tag}\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n\r\n            <MetaData\r\n              theme={d.theme}\r\n              viewCount={d.viewCount}\r\n              answerCount={d.answerCount}\r\n              ownerProfileLink={d.ownerProfileLink}\r\n              ownerProfilePhoto={d.ownerProfilePhoto}\r\n              ownerName={d.ownerName}\r\n            />\r\n\r\n            <span className=\"index\">{index + 1}</span>\r\n          </div>\r\n        );\r\n      })}\r\n\r\n      <ScrollToTopButton />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tag;\r\n","export default __webpack_public_path__ + \"static/media/github-icon.95372804.svg\";","import React from \"react\";\r\nimport Github from \"../images/github-icon.svg\";\r\nimport \"../stylesheets/Footer.scss\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer>\r\n      <a\r\n        href=\"https://github.com/praaatik/stackexchange-digest\"\r\n        target=\"_blank\"\r\n        rel=\"noreferrer\"\r\n      >\r\n        <img src={Github} alt=\"Github repository link\" />\r\n      </a>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n\r\n*,\r\n*::after,\r\n*::before {\r\n  box-sizing: border-box;\r\n  scroll-behavior: smooth;\r\n}\r\n\r\n*::selection{\r\n    background: ${({ theme }) => theme.selectionBackgroundColor};\r\n    color: ${({ theme }) => theme.selectionColor};\r\n}\r\n\r\nbody{\r\n    background: ${({ theme }) => theme.backgroundColor};\r\n    transition: all 250ms ease;\r\n\r\n    .question-card--parent{\r\n        background: ${({ theme }) => theme.backgroundColor};\r\n    }\r\n    .question-card{\r\n        border: 8px solid  ${({ theme }) => theme.borderColor};\r\n    }\r\n\r\n    .title{\r\n        color: ${({ theme }) => theme.titleColor};\r\n    }\r\n\r\n    .tag-holder{\r\n        background: ${({ theme }) => theme.tagHolderBackground};\r\n    }\r\n    \r\n    .tags{\r\n        color: ${({ theme }) => theme.tagColor}; \r\n    }\r\n\r\n    .view-count, .answer-count, .meta-data--right{\r\n        color: ${({ theme }) => theme.profileColor}\r\n    }\r\n\r\n    .index{\r\n        color: ${({ theme }) => theme.titleColor};\r\n    }\r\n\r\n    .themeButton{\r\n        background: ${({ theme }) => theme.themeButtonColor}\r\n    }\r\n\r\n    .themer{\r\n        background: ${({ theme }) => theme.themeButtonColor}\r\n    }\r\n\r\n    .navbar{\r\n        background: ${({ theme }) => theme.navBackgroundColor};\r\n        border-bottom-color: ${({ theme }) => theme.borderColor};\r\n    }\r\n\r\n    .home{\r\n        color: ${({ theme }) => theme.titleColor}\r\n    }\r\n\r\n    .site-name{\r\n        color: ${({ theme }) => theme.titleColor}\r\n    }\r\n\r\n    .card{\r\n        border: 8px solid  ${({ theme }) => theme.borderColor};\r\n    }\r\n\r\n    .card--viewmore{\r\n        color: ${({ theme }) => theme.titleColor};\r\n    }\r\n\r\n    .left__border, .right__border, .top__border, .bottom__border{\r\n        background: ${({ theme }) => theme.borderColor};\r\n        transition: all 160ms ease-in;\r\n    }\r\n\r\n    .scroll-top-button{\r\n        border: 5px solid ${({ theme }) => theme.scrollTopBorder};\r\n    }\r\n\r\n    \r\n}\r\n`;\r\n","export const darkTheme = {\r\n  backgroundColor: \"#87556f\",\r\n  borderColor: \"#322f3d\",\r\n  titleColor: \"#fff\",\r\n  tagHolderBackground: \"#59405c\",\r\n  tagColor: \"#fff\",\r\n  profileColor: \"#fff\",\r\n  themeButtonColor: \"#59405c\",\r\n  navBackgroundColor: \"#59405c\",\r\n  selectionBackgroundColor: \"#f4eeff\",\r\n  selectionColor: \"#87556f\",\r\n  scrollTopBorder: \"#a6b1e1\",\r\n  // background: orange,\r\n};\r\n\r\nexport const lightTheme = {\r\n  backgroundColor: \"#f4eeff\",\r\n  borderColor: \"#a6b1e1\",\r\n  titleColor: \"#000\",\r\n  tagHolderBackground: \"#dcd6f7\",\r\n  tagColor: \"#000\",\r\n  profileColor: \"#000\",\r\n  themeButtonColor: \"#dcd6f7\",\r\n  navBackgroundColor: \"#dcd6f7\",\r\n  selectionBackgroundColor: \"#87556f\",\r\n  selectionColor: \"#f4eeff\",\r\n  scrollTopBorder: \"#322f3d\",\r\n};\r\n","//libraries\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  HashRouter,\n} from \"react-router-dom\";\n\n//components\nimport CardHolder from \"./components/CardHolder\";\nimport { sites } from \"./sites\";\nimport SpecificCard from \"./components/SpecificCard\";\nimport Themer from \"./components/Themer\";\nimport Navbar from \"./components/Navbar\";\nimport Tag from \"./components/Tag\";\nimport Footer from \"./components/Footer\";\n\n//stylesheets\nimport \"./stylesheets/App.scss\";\n\n//styled-components and theme related imports\nimport { GlobalStyles } from \"./styled-components/global\";\nimport { ThemeProvider } from \"styled-components\";\nimport { lightTheme, darkTheme } from \"./styled-components/theme\";\n\nfunction App() {\n  const currentTheme = localStorage.getItem(\"theme\");\n  currentTheme === null ? console.log(\"it is null\") : console.log(\"notnull\");\n\n  const [questions, setQuestions] = useState([]);\n  const [title, setTitle] = useState([]);\n  const [theme, setTheme] = useState(localStorage.getItem(\"theme\") || \"light\");\n  const siteURLs = [];\n\n  const fetchData = () => {\n    sites.map((s) => {\n      siteURLs.push(\n        `https://api.stackexchange.com/2.2/questions?order=desc&sort=hot&site=${s}&filter=!L_(IB3Vfl8G6UL78mkS_Nm`\n      );\n    });\n\n    axios.all(siteURLs.map((s) => axios.get(s))).then(\n      axios.spread((...allData) => {\n        allData.map((a) => {\n          setQuestions((questions) => questions.concat(a.data.items[0].link));\n          setTitle((title) => title.concat(a.data.items[0].title));\n        });\n      })\n    );\n  };\n\n  function themeToggle() {\n    theme === \"light\" ? setTheme(\"dark\") : setTheme(\"light\");\n  }\n\n  useEffect(() => {\n    localStorage.setItem(\"theme\", theme);\n    console.log(`theme updated to ${theme}`);\n  }, [theme]);\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <ThemeProvider theme={theme === \"light\" ? lightTheme : darkTheme}>\n      <HashRouter basename={process.env.PUBLIC_URL}>\n        <div className=\"App\">\n          <GlobalStyles />\n          <Navbar />\n          <Themer clicked={themeToggle} currentTheme={theme} />\n          <Switch>\n            <Route path=\"/\" exact>\n              <CardHolder sites={sites} questions={questions} title={title} />\n            </Route>\n\n            {/* <Route path=\"/specific/:id\" component={SpecificCard} exact></Route> */}\n\n            {/* notice the ...props which have been passed, it is needed to pass in the default props as well */}\n            {/* Also notice the usage of render instead of component to avoid re-mounting */}\n            {/* Refer = https://stackoverflow.com/a/43299633/6438526 */}\n            <Route\n              path=\"/specific/:id\"\n              render={(props) => <SpecificCard theme={theme} {...props} />}\n              exact\n            ></Route>\n            <Route\n              path=\"/specific/tag/:id\"\n              render={(props) => <Tag {...props} />}\n              exact\n            ></Route>\n          </Switch>\n          <Footer />\n        </div>\n      </HashRouter>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n\n/*******************************\n * https://stackexchange.com/hot-questions-for-mobile for the hot questions\n * https://api.stackexchange.com/2.2/questions?order=desc&sort=creation&site=${}&filter=!L_(IB3Vfl8G6UL78mkS_Nm\n *\n * (title, link), tags, owner - (name, link), creation date, isanswered\n *\n *\n ******************************/\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}