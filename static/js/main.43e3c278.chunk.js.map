{"version":3,"sources":["components/ScrollToTopButton.js","components/Card.js","components/CardHolder.js","sites.js","images/view-dark.svg","images/question-dark.svg","images/view-light.svg","images/question-light.svg","components/SpecificCard.js","images/moon.svg","images/sun.svg","components/Themer.js","components/Navbar.js","styled-components/global.js","styled-components/theme.js","App.js","reportWebVitals.js","index.js"],"names":["ScrollToTopButton","className","onClick","document","body","scrollTop","documentElement","xmlns","viewBox","d","fill","Card","props","console","log","class","join","siteName","href","link","target","rel","dangerouslySetInnerHTML","__html","title","to","CardHolder","sites","map","s","index","w","substr","indexOf","questions","SpecificCard","theme","useState","data","setData","loading","setLoading","parentRef","useRef","match","params","id","URL","useEffect","axios","get","then","response","items","concat","questionId","question_id","creationDate","creation_date","isAnswered","is_answered","viewCount","view_count","answerCount","answer_count","tags","ownerName","owner","display_name","ownerProfileLink","ownerProfilePhoto","profile_image","ref","tag","src","ViewLight","ViewDark","alt","QuestionLight","QuestionDark","Themer","clicked","currentTheme","Moon","Sun","Navbar","GlobalStyles","createGlobalStyle","selectionBackgroundColor","selectionColor","backgroundColor","borderColor","titleColor","tagHolderBackground","tagColor","profileColor","themeButtonColor","navBackgroundColor","scrollTopBorder","darkTheme","lightTheme","App","setQuestions","setTitle","setTheme","siteURLs","push","all","spread","allData","a","path","exact","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.43e3c278.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../stylesheets/ScrollToTopButton.scss\";\r\n\r\nfunction ScrollToTopButton() {\r\n  function scrollUp() {\r\n    document.body.scrollTop = 0; //for safari\r\n    document.documentElement.scrollTop = 0; //for opera, firefox, chrome, IE\r\n  }\r\n  return (\r\n    <div className=\"scroll-top-button\" onClick={() => scrollUp()}>\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        viewBox=\"0 0 24 24\"\r\n        className=\"scroll-top-icon\"\r\n      >\r\n        <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n        <path d=\"M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z\" />\r\n      </svg>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ScrollToTopButton;\r\n","import React from \"react\";\r\nimport \"../stylesheets/Card.scss\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Card(props) {\r\n  console.log(props);\r\n  return (\r\n    <div className={[props.class, \"card\"].join(\" \")}>\r\n      <p className=\"site-name\">{props.siteName}</p>\r\n\r\n      <br></br>\r\n      <a href={props.link} target=\"_blank\" rel=\"noreferrer\" className=\"title\">\r\n        <div dangerouslySetInnerHTML={{ __html: props.title }}></div>\r\n      </a>\r\n      <Link to={`/specific/${props.siteName}`}>\r\n        <div className=\"card--viewmore\">\r\n          View Questions\r\n          <span className=\"card--viewmore__left\"></span>\r\n          <span className=\"card--viewmore__top\"></span>\r\n          <span className=\"card--viewmore__right\"></span>\r\n          <span className=\"card--viewmore__bottom\"></span>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\n\r\nimport \"../stylesheets/CardHolder.scss\";\r\n\r\nimport ScrollToTopButton from \"./ScrollToTopButton\";\r\nimport Card from \"./Card\";\r\n\r\nfunction CardHolder(props) {\r\n  return (\r\n    <div className=\"cardholder\">\r\n      {props.sites.map((s, index) => {\r\n        //extracting the classnames for the website name\r\n        // ex - codereview.stackexchange.com would have a classname of \"codereview\"\r\n        // in case it's just one word, like askubuntu, \"w\" would be empty and the classname would be \"askubuntu\"\r\n\r\n        let w = s.substr(0, s.indexOf(\".\"));\r\n        return w === \"\" ? (\r\n          <Card\r\n            siteName={s}\r\n            class={s}\r\n            link={props.questions[index]}\r\n            title={props.title[index]}\r\n          ></Card>\r\n        ) : (\r\n          <Card\r\n            siteName={s}\r\n            class={w}\r\n            link={props.questions[index]}\r\n            title={props.title[index]}\r\n          ></Card>\r\n        );\r\n      })}\r\n\r\n      <ScrollToTopButton />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardHolder;\r\n","export let sites = [\r\n  \"stackoverflow\",\r\n  \"english.stackexchange\",\r\n  \"physics.stackexchange\",\r\n  \"movies.stackexchange\",\r\n  \"astronomy.stackexchange\",\r\n  \"raspberrypi.stackexchange\",\r\n  \"worldbuilding.stackexchange\",\r\n  \"askubuntu\",\r\n  \"superuser\",\r\n  \"math.stackexchange\",\r\n  \"unix.stackexchange\",\r\n  \"cstheory.stackexchange\",\r\n  \"codereview.stackexchange\",\r\n  \"security.stackexchange\",\r\n  \"softwareengineering.stackexchange\",\r\n  \"android.stackexchange\",\r\n  \"fitness.stackexchange\",\r\n  \"skeptics.stackexchange\",\r\n  \"scicomp.stackexchange\",\r\n  \"history.stackexchange\",\r\n  \"cs.stackexchange\",\r\n  \"hinduism.stackexchange\",\r\n  \"worldbuilding.stackexchange\",\r\n  \"networkengineering.stackexchange\",\r\n  \"ux.stackexchange\",\r\n];\r\n// export let sites = [\r\n//   \"movies.stackexchange\",\r\n//   \"physics.stackexchange\",\r\n//   \"unix.stackexchange\",\r\n// ];\r\n","export default __webpack_public_path__ + \"static/media/view-dark.dca5f315.svg\";","export default __webpack_public_path__ + \"static/media/question-dark.c0bf8b2f.svg\";","export default __webpack_public_path__ + \"static/media/view-light.e737dd0b.svg\";","export default __webpack_public_path__ + \"static/media/question-light.11adbd0a.svg\";","import React, { useEffect, useState, useRef } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport \"../stylesheets/SpecificCard.scss\";\r\n\r\nimport ViewDark from \"../images/view-dark.svg\";\r\nimport QuestionDark from \"../images/question-dark.svg\";\r\nimport ViewLight from \"../images/view-light.svg\";\r\nimport QuestionLight from \"../images/question-light.svg\";\r\n\r\nimport ScrollToTopButton from \"./ScrollToTopButton\";\r\n\r\n// function SpecificCard(props) {\r\n//   console.log(props.match.params.id);\r\n//   return <div>Hey</div>;\r\n// }\r\n\r\nfunction SpecificCard(props) {\r\n  console.log(props.theme);\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const parentRef = useRef(null);\r\n\r\n  const siteName = props.match.params.id;\r\n  const URL = `https://api.stackexchange.com/2.2/questions?order=desc&sort=activity&site=${siteName}&filter=!LaSRLvM3aoFvP_FHtdS2mM`;\r\n\r\n  const fetchData = () => {\r\n    axios.get(URL).then((response) => {\r\n      response.data.items.map((d, index) => {\r\n        setData((data) =>\r\n          data.concat({\r\n            title: d.title,\r\n            link: d.link,\r\n            questionId: d.question_id,\r\n            creationDate: d.creation_date,\r\n            isAnswered: d.is_answered,\r\n            viewCount: d.view_count,\r\n            answerCount: d.answer_count,\r\n            tags: d.tags,\r\n            ownerName: d.owner.display_name,\r\n            ownerProfileLink: d.owner.link,\r\n            ownerProfilePhoto: d.owner.profile_image,\r\n          })\r\n        );\r\n      });\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    setLoading(false);\r\n    // setTimeout(() => {\r\n    //   const parentRefNode = parentRef.current;\r\n    //   console.log(parentRefNode.classList);\r\n    //   parentRefNode.classList.add(\"light\");\r\n    // }, 10000);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"question-card--parent\" id=\"parent\" ref={parentRef}>\r\n      {console.log(`Loading is: ${loading}`)}\r\n      {data.map((d, index) => {\r\n        return (\r\n          <div className=\"question-card\">\r\n            <div className=\"question\">\r\n              <a\r\n                href={d.link}\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n                className={\"title\"}\r\n              >\r\n                <div\r\n                  dangerouslySetInnerHTML={{ __html: d.title }}\r\n                  className={d.answerCount === 0 ? \"no-answer\" : \"answer\"}\r\n                ></div>\r\n              </a>\r\n            </div>\r\n            <div className=\"tag-holder\">\r\n              {d.tags.map((tag) => {\r\n                return <div className=\"tags\">{tag}</div>;\r\n              })}\r\n            </div>\r\n            <div className=\"meta-data\">\r\n              <div className=\"meta-data--left\">\r\n                <div className=\"view-count\">\r\n                  <img\r\n                    src={props.theme === \"dark\" ? ViewLight : ViewDark}\r\n                    alt=\"view icon\"\r\n                  ></img>\r\n                  <span>{d.viewCount}</span>\r\n                </div>\r\n                <div className=\"answer-count\">\r\n                  <img\r\n                    src={props.theme === \"dark\" ? QuestionLight : QuestionDark}\r\n                    alt=\"question icon\"\r\n                  ></img>\r\n                  <span>{d.answerCount}</span>\r\n                </div>\r\n              </div>\r\n              <a href={d.ownerProfileLink} target=\"_blank\" rel=\"noreferrer\">\r\n                <div className=\"meta-data--right\">\r\n                  <img src={d.ownerProfilePhoto} alt={d.ownerName} />\r\n                  <p dangerouslySetInnerHTML={{ __html: d.ownerName }}></p>\r\n                </div>\r\n              </a>\r\n            </div>\r\n            <span className=\"index\">{index + 1}</span>\r\n          </div>\r\n        );\r\n      })}\r\n\r\n      <ScrollToTopButton />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SpecificCard;\r\n","export default __webpack_public_path__ + \"static/media/moon.230bed42.svg\";","export default __webpack_public_path__ + \"static/media/sun.2d358aa0.svg\";","import React, { useState } from \"react\";\r\n\r\nimport Moon from \"../images/moon.svg\";\r\nimport Sun from \"../images/sun.svg\";\r\n\r\nimport \"../stylesheets/Themer.scss\";\r\nfunction Themer(props) {\r\n  return (\r\n    <div className=\"themer\" onClick={() => props.clicked()}>\r\n      <img\r\n        src={props.currentTheme === \"light\" ? Moon : Sun}\r\n        alt=\"theme button\"\r\n      ></img>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Themer;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"../stylesheets/Navbar.scss\";\r\n\r\nfunction Navbar() {\r\n  return (\r\n    <div className=\"navbar\">\r\n      <Link to=\"/\">\r\n        <div className=\"home\">Home</div>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n\r\n*,\r\n*::after,\r\n*::before {\r\n  box-sizing: border-box;\r\n  scroll-behavior: smooth;\r\n}\r\n\r\n*::selection{\r\n    background: ${({ theme }) => theme.selectionBackgroundColor};\r\n    color: ${({ theme }) => theme.selectionColor};\r\n}\r\n\r\nbody{\r\n    background: ${({ theme }) => theme.backgroundColor};\r\n    transition: all 250ms ease;\r\n\r\n    .question-card--parent{\r\n        background: ${({ theme }) => theme.backgroundColor};\r\n    }\r\n    .question-card{\r\n        border: 8px solid  ${({ theme }) => theme.borderColor};\r\n    }\r\n\r\n    .title{\r\n        color: ${({ theme }) => theme.titleColor};\r\n    }\r\n\r\n    .tag-holder{\r\n        background: ${({ theme }) => theme.tagHolderBackground};\r\n    }\r\n    \r\n    .tags{\r\n        color: ${({ theme }) => theme.tagColor}; \r\n    }\r\n\r\n    .view-count, .answer-count, .meta-data--right{\r\n        color: ${({ theme }) => theme.profileColor}\r\n    }\r\n\r\n    .index{\r\n        color: ${({ theme }) => theme.titleColor};\r\n    }\r\n\r\n    .themeButton{\r\n        background: ${({ theme }) => theme.themeButtonColor}\r\n    }\r\n\r\n    .themer{\r\n        background: ${({ theme }) => theme.themeButtonColor}\r\n    }\r\n\r\n    .navbar{\r\n        background: ${({ theme }) => theme.navBackgroundColor};\r\n        border-bottom-color: ${({ theme }) => theme.borderColor};\r\n    }\r\n\r\n    .home{\r\n        color: ${({ theme }) => theme.titleColor}\r\n    }\r\n\r\n    .site-name{\r\n        color: ${({ theme }) => theme.titleColor}\r\n    }\r\n\r\n    .card{\r\n        border: 8px solid  ${({ theme }) => theme.borderColor};\r\n    }\r\n\r\n    .card--viewmore{\r\n        color: ${({ theme }) => theme.titleColor};\r\n        border: 5px solid  ${({ theme }) => theme.borderColor};\r\n    }\r\n\r\n    .scroll-top-button{\r\n        border: 5px solid ${({ theme }) => theme.scrollTopBorder};\r\n    }\r\n\r\n    .scroll-top-icon{\r\n        fill: ${({ theme }) => theme.scrollTopBorder}\r\n    }\r\n}\r\n`;\r\n","export const darkTheme = {\r\n  backgroundColor: \"#87556f\",\r\n  borderColor: \"#322f3d\",\r\n  titleColor: \"#fff\",\r\n  tagHolderBackground: \"#59405c\",\r\n  tagColor: \"#fff\",\r\n  profileColor: \"#fff\",\r\n  themeButtonColor: \"#59405c\",\r\n  navBackgroundColor: \"#59405c\",\r\n  selectionBackgroundColor: \"#f4eeff\",\r\n  selectionColor: \"#87556f\",\r\n  scrollTopBorder: \"#a6b1e1\",\r\n  // background: orange,\r\n};\r\n\r\nexport const lightTheme = {\r\n  backgroundColor: \"#f4eeff\",\r\n  borderColor: \"#a6b1e1\",\r\n  titleColor: \"#000\",\r\n  tagHolderBackground: \"#dcd6f7\",\r\n  tagColor: \"#000\",\r\n  profileColor: \"#000\",\r\n  themeButtonColor: \"#dcd6f7\",\r\n  navBackgroundColor: \"#dcd6f7\",\r\n  selectionBackgroundColor: \"#87556f\",\r\n  selectionColor: \"#f4eeff\",\r\n  scrollTopBorder: \"#322f3d\",\r\n};\r\n","//libraries\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\n//components\nimport CardHolder from \"./components/CardHolder\";\nimport { sites } from \"./sites\";\nimport SpecificCard from \"./components/SpecificCard\";\nimport Themer from \"./components/Themer\";\nimport Navbar from \"./components/Navbar\";\n\n//stylesheets\nimport \"./stylesheets/App.scss\";\n\n//styled-components and theme related imports\nimport { GlobalStyles } from \"./styled-components/global\";\nimport { ThemeProvider } from \"styled-components\";\nimport { lightTheme, darkTheme } from \"./styled-components/theme\";\n\nfunction App() {\n  const [questions, setQuestions] = useState([]);\n  const [title, setTitle] = useState([]);\n  const [theme, setTheme] = useState(\"light\");\n  const siteURLs = [];\n  const primaryURLs = [];\n  const secondaryURLs = [];\n\n  const fetchData = () => {\n    sites.map((s) => {\n      siteURLs.push(\n        `https://api.stackexchange.com/2.2/questions?order=desc&sort=creation&site=${s}&filter=!L_(IB3Vfl8G6UL78mkS_Nm`\n      );\n    });\n\n    axios.all(siteURLs.map((s) => axios.get(s))).then(\n      axios.spread((...allData) => {\n        allData.map((a) => {\n          setQuestions((questions) => questions.concat(a.data.items[0].link));\n          setTitle((title) => title.concat(a.data.items[0].title));\n        });\n      })\n    );\n  };\n\n  function themeToggle() {\n    theme === \"light\" ? setTheme(\"dark\") : setTheme(\"light\");\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <ThemeProvider theme={theme === \"light\" ? lightTheme : darkTheme}>\n      <Router>\n        <div className=\"App\">\n          <GlobalStyles />\n          <Navbar />\n          <Themer clicked={themeToggle} currentTheme={theme} />\n          <Switch>\n            <Route path=\"/\" exact>\n              <CardHolder sites={sites} questions={questions} title={title} />\n            </Route>\n\n            {/* <Route path=\"/specific/:id\" component={SpecificCard} exact></Route> */}\n\n            {/* notice the ...props which have been passed, it is needed to pass in the default props as well */}\n            {/* Also notice the usage of render instead of component to avoid re-mounting */}\n            {/* Refer = https://stackoverflow.com/a/43299633/6438526 */}\n            <Route\n              path=\"/specific/:id\"\n              render={(props) => <SpecificCard theme={theme} {...props} />}\n              exact\n            ></Route>\n          </Switch>\n        </div>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n\n/*******************************\n * https://stackexchange.com/hot-questions-for-mobile for the hot questions\n * https://api.stackexchange.com/2.2/questions?order=desc&sort=creation&site=${}&filter=!L_(IB3Vfl8G6UL78mkS_Nm\n *\n * (title, link), tags, owner - (name, link), creation date, isanswered\n *\n *\n ******************************/\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}